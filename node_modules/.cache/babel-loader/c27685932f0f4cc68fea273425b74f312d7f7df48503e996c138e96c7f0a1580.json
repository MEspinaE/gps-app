{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Map.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A';\nconst Map = () => {\n  _s();\n  const [gpsPoints, setGpsPoints] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Obtener puntos GPS desde el servidor\n    axios.get('http://localhost:5000/api/gps').then(response => {\n      setGpsPoints(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error al obtener los puntos GPS:\", error);\n      setError('Error al cargar los puntos GPS.');\n      setLoading(false);\n    });\n\n    // Obtener la ubicación del dispositivo con la API de Geolocalización del navegador\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Latitud:\", position.coords.latitude);\n        console.log(\"Longitud:\", position.coords.longitude);\n        setCurrentLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error al obtener la ubicación:\", error);\n        setError(\"No se pudo obtener la ubicación del dispositivo.\");\n      });\n    } else {\n      setError(\"La geolocalización no es compatible con este navegador.\");\n    }\n\n    // Función para obtener la ubicación desde la API de Google\n    const fetchLocationFromGoogle = () => {\n      axios.get(`https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.data.location;\n        const sent_at = new Date().toISOString();\n        const phone_identifier = \"telefono-123\";\n        setCurrentLocation({\n          latitude: lat,\n          longitude: lng\n        });\n\n        // Guardar punto GPS en el servidor\n        axios.post('http://localhost:5000/api/gps', {\n          latitude: lat,\n          longitude: lng,\n          sent_at,\n          phone_identifier\n        }).then(() => {\n          console.log('Punto GPS guardado');\n        }).catch(error => {\n          console.error(\"Error al guardar el punto GPS:\", error);\n        });\n      }).catch(error => {\n        console.error(\"Error al obtener la ubicación de Google:\", error);\n        setError('No se pudo obtener la ubicación de Google.');\n      });\n    };\n    const intervalId = setInterval(fetchLocationFromGoogle, 5000); // Ejecutar cada 5 segundos\n\n    return () => clearInterval(intervalId); // Limpiar el intervalo al desmontar el componente\n  }, []);\n\n  // Icono personalizado\n  const customIcon = new L.Icon({\n    iconUrl: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n        <circle cx=\"12\" cy=\"5\" r=\"3\" fill=\"#ff6347\" />\n        <path d=\"M12 0c-4.41 0-8 3.59-8 8 0 4.89 6 12 6 12s2-3.3 4-6.6c2 3.3 4 6.6 4 6.6s6-7.11 6-12c0-4.41-3.59-8-8-8z\" fill=\"#ff6347\"/>\n      </svg>\n    `),\n    iconSize: [30, 40],\n    iconAnchor: [15, 40],\n    popupAnchor: [0, -40]\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando el mapa...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: currentLocation ? [currentLocation.latitude, currentLocation.longitude] : [-34.6037, -58.3816] // Coordenadas por defecto (Buenos Aires)\n      ,\n      zoom: 13,\n      style: {\n        width: '100%',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), gpsPoints.map(point => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [point.latitude, point.longitude],\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tel\\xE9fono:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), \" \", point.phone_identifier, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hora de env\\xEDo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), \" \", new Date(point.sent_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, point.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)), currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [currentLocation.latitude, currentLocation.longitude],\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Tu ubicaci\\xF3n actual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"ukp1dmz3GjvosilTw+7cqxYuGpk=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","axios","jsxDEV","_jsxDEV","API_KEY","Map","_s","gpsPoints","setGpsPoints","currentLocation","setCurrentLocation","loading","setLoading","error","setError","get","then","response","data","catch","console","navigator","geolocation","getCurrentPosition","position","log","coords","latitude","longitude","fetchLocationFromGoogle","lat","lng","location","sent_at","Date","toISOString","phone_identifier","post","intervalId","setInterval","clearInterval","customIcon","Icon","iconUrl","encodeURIComponent","iconSize","iconAnchor","popupAnchor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","width","height","url","attribution","map","point","icon","toLocaleString","id","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './Map.css';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = 'AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A'; \r\n\r\nconst Map = () => {\r\n  const [gpsPoints, setGpsPoints] = useState([]);\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [loading, setLoading] = useState(true); \r\n  const [error, setError] = useState(null); \r\n\r\n  useEffect(() => {\r\n    // Obtener puntos GPS desde el servidor\r\n    axios.get('http://localhost:5000/api/gps')\r\n      .then(response => {\r\n        setGpsPoints(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error al obtener los puntos GPS:\", error);\r\n        setError('Error al cargar los puntos GPS.');\r\n        setLoading(false);\r\n      });\r\n\r\n    // Obtener la ubicación del dispositivo con la API de Geolocalización del navegador\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          console.log(\"Latitud:\", position.coords.latitude);\r\n          console.log(\"Longitud:\", position.coords.longitude);\r\n          setCurrentLocation({\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al obtener la ubicación:\", error);\r\n          setError(\"No se pudo obtener la ubicación del dispositivo.\");\r\n        }\r\n      );\r\n    } else {\r\n      setError(\"La geolocalización no es compatible con este navegador.\");\r\n    }\r\n\r\n    // Función para obtener la ubicación desde la API de Google\r\n    const fetchLocationFromGoogle = () => {\r\n      axios.get(`https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A`)\r\n        .then(response => {\r\n          const { lat, lng } = response.data.location;\r\n          const sent_at = new Date().toISOString();\r\n          const phone_identifier = \"telefono-123\";\r\n\r\n          setCurrentLocation({ latitude: lat, longitude: lng });\r\n\r\n          // Guardar punto GPS en el servidor\r\n          axios.post('http://localhost:5000/api/gps', {\r\n            latitude: lat,\r\n            longitude: lng,\r\n            sent_at,\r\n            phone_identifier\r\n          })\r\n          .then(() => {\r\n            console.log('Punto GPS guardado');\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error al guardar el punto GPS:\", error);\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error al obtener la ubicación de Google:\", error);\r\n          setError('No se pudo obtener la ubicación de Google.');\r\n        });\r\n    };\r\n\r\n    const intervalId = setInterval(fetchLocationFromGoogle, 5000); // Ejecutar cada 5 segundos\r\n\r\n    return () => clearInterval(intervalId); // Limpiar el intervalo al desmontar el componente\r\n  }, []);\r\n\r\n  // Icono personalizado\r\n  const customIcon = new L.Icon({\r\n    iconUrl: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(`\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <circle cx=\"12\" cy=\"5\" r=\"3\" fill=\"#ff6347\" />\r\n        <path d=\"M12 0c-4.41 0-8 3.59-8 8 0 4.89 6 12 6 12s2-3.3 4-6.6c2 3.3 4 6.6 4 6.6s6-7.11 6-12c0-4.41-3.59-8-8-8z\" fill=\"#ff6347\"/>\r\n      </svg>\r\n    `),\r\n    iconSize: [30, 40],\r\n    iconAnchor: [15, 40],\r\n    popupAnchor: [0, -40],\r\n  });\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando el mapa...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer\r\n        center={currentLocation ? [currentLocation.latitude, currentLocation.longitude] : [-34.6037, -58.3816]} // Coordenadas por defecto (Buenos Aires)\r\n        zoom={13}\r\n        style={{ width: '100%', height: '100vh' }}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n\r\n        {gpsPoints.map((point) => (\r\n          <Marker\r\n            key={point.id}\r\n            position={[point.latitude, point.longitude]}\r\n            icon={customIcon}\r\n          >\r\n            <Popup>\r\n              <strong>Teléfono:</strong> {point.phone_identifier} <br />\r\n              <strong>Hora de envío:</strong> {new Date(point.sent_at).toLocaleString()}\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {currentLocation && (\r\n          <Marker position={[currentLocation.latitude, currentLocation.longitude]} icon={customIcon}>\r\n            <Popup>Tu ubicación actual</Popup>\r\n          </Marker>\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}