{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [gpsPoints, setGpsPoints] = useState([]); // Hook de estado\n  const [error, setError] = useState(''); // Hook de error\n\n  // Uso de useEffect para cargar los puntos GPS\n  useEffect(() => {\n    const fetchGpsPoints = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/gps');\n        setGpsPoints(response.data); // Establecer los puntos GPS en el estado\n      } catch (err) {\n        setError('Error al cargar puntos GPS');\n      }\n    };\n    fetchGpsPoints();\n  }, []); // Se ejecuta una sola vez cuando el componente se monta\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), gpsPoints.map(point => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [point.latitude, point.longitude],\n        icon: new L.Icon({\n          iconUrl: 'https://example.com/phone-icon.png',\n          iconSize: [32, 32]\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ubicaci\\xF3n:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \" (\", point.latitude, \", \", point.longitude, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hora:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), \" \", new Date(point.sent_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, point.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"QSsayCwH9/ihOMwxX/ryggF5oPE=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","axios","jsxDEV","_jsxDEV","Map","_s","gpsPoints","setGpsPoints","error","setError","fetchGpsPoints","response","get","data","err","style","height","width","children","color","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","map","point","position","latitude","longitude","icon","Icon","iconUrl","iconSize","Date","sent_at","toLocaleString","id","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport './Map.css';\r\n\r\nconst Map = () => {\r\n  const [gpsPoints, setGpsPoints] = useState([]); // Hook de estado\r\n  const [error, setError] = useState(''); // Hook de error\r\n\r\n  // Uso de useEffect para cargar los puntos GPS\r\n  useEffect(() => {\r\n    const fetchGpsPoints = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/gps');\r\n        setGpsPoints(response.data);  // Establecer los puntos GPS en el estado\r\n      } catch (err) {\r\n        setError('Error al cargar puntos GPS');\r\n      }\r\n    };\r\n\r\n    fetchGpsPoints();\r\n  }, []);  // Se ejecuta una sola vez cuando el componente se monta\r\n\r\n  return (\r\n    <div style={{ height: '100vh', width: '100%' }}>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      <MapContainer center={[51.505, -0.09]} zoom={13} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {gpsPoints.map((point) => (\r\n          <Marker\r\n            key={point.id}\r\n            position={[point.latitude, point.longitude]}\r\n            icon={new L.Icon({\r\n              iconUrl: 'https://example.com/phone-icon.png',\r\n              iconSize: [32, 32],\r\n            })}\r\n          >\r\n            <Popup>\r\n              <strong>Ubicaci√≥n:</strong> ({point.latitude}, {point.longitude})<br />\r\n              <strong>Hora:</strong> {new Date(point.sent_at).toLocaleString()}\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}