{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet'; // Importar Leaflet\nimport './Map.css'; // Importar el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [gpsPoints, setGpsPoints] = useState([]);\n  const [error, setError] = useState('');\n  const mapRef = useRef(null); // Referencia al contenedor del mapa\n  const mapInstance = useRef(null); // Referencia a la instancia del mapa\n\n  // Simulando los puntos GPS\n  useEffect(() => {\n    const gpsPoints = [{\n      id: 1,\n      latitude: 51.505,\n      longitude: -0.09\n    },\n    // Londres\n    {\n      id: 2,\n      latitude: 48.8566,\n      longitude: 2.3522\n    },\n    // París\n    {\n      id: 3,\n      latitude: 40.7128,\n      longitude: -74.0060\n    },\n    // Nueva York\n    {\n      id: 4,\n      latitude: 34.0522,\n      longitude: -118.2437\n    } // Los Ángeles\n    ];\n    setGpsPoints(gpsPoints);\n  }, []);\n\n  // Inicialización del mapa y los puntos GPS\n  useEffect(() => {\n    if (gpsPoints.length > 0 && mapRef.current && !mapInstance.current) {\n      // Inicializamos el mapa solo una vez\n      mapInstance.current = L.map(mapRef.current);\n\n      // Añadimos la capa de OpenStreetMap\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstance.current);\n\n      // Calculamos el centro del mapa basándonos en los puntos GPS\n      const latitudes = gpsPoints.map(point => point.latitude);\n      const longitudes = gpsPoints.map(point => point.longitude);\n\n      // Calculamos el centro medio de todos los puntos GPS\n      const centerLat = (Math.min(...latitudes) + Math.max(...latitudes)) / 2;\n      const centerLng = (Math.min(...longitudes) + Math.max(...longitudes)) / 2;\n\n      // Centramos el mapa en el promedio de las coordenadas\n      mapInstance.current.setView([centerLat, centerLng], 3); // Zoom inicial 3\n\n      // Añadimos los marcadores de los puntos GPS\n      gpsPoints.forEach(point => {\n        L.marker([point.latitude, point.longitude]).addTo(mapInstance.current).bindPopup(`<b>ID:</b> ${point.id}`);\n      });\n\n      // Ajuste de tamaño al cambiar el tamaño de la ventana\n      mapInstance.current.invalidateSize();\n    }\n\n    // Limpiar la instancia del mapa al desmontar el componente\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n      }\n    };\n  }, [gpsPoints]); // Solo cuando gpsPoints cambia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        padding: '10px',\n        backgroundColor: '#f44336',\n        color: 'white',\n        borderRadius: '5px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: '100%',\n        // El mapa ocupará todo el contenedor\n        height: '100%' // El mapa ocupará el 100% de la altura disponible\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"U4vSrQiejDjOVMQEzcZgSWovgtI=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","jsxDEV","_jsxDEV","Map","_s","gpsPoints","setGpsPoints","error","setError","mapRef","mapInstance","id","latitude","longitude","length","current","map","tileLayer","attribution","addTo","latitudes","point","longitudes","centerLat","Math","min","max","centerLng","setView","forEach","marker","bindPopup","invalidateSize","remove","className","children","style","position","top","left","transform","padding","backgroundColor","color","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/Map.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport L from 'leaflet'; // Importar Leaflet\r\nimport './Map.css'; // Importar el archivo CSS\r\n\r\nconst Map = () => {\r\n  const [gpsPoints, setGpsPoints] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const mapRef = useRef(null); // Referencia al contenedor del mapa\r\n  const mapInstance = useRef(null); // Referencia a la instancia del mapa\r\n\r\n  // Simulando los puntos GPS\r\n  useEffect(() => {\r\n    const gpsPoints = [\r\n      { id: 1, latitude: 51.505, longitude: -0.09 }, // Londres\r\n      { id: 2, latitude: 48.8566, longitude: 2.3522 }, // París\r\n      { id: 3, latitude: 40.7128, longitude: -74.0060 }, // Nueva York\r\n      { id: 4, latitude: 34.0522, longitude: -118.2437 }, // Los Ángeles\r\n    ];\r\n    setGpsPoints(gpsPoints);\r\n  }, []);\r\n\r\n  // Inicialización del mapa y los puntos GPS\r\n  useEffect(() => {\r\n    if (gpsPoints.length > 0 && mapRef.current && !mapInstance.current) {\r\n      // Inicializamos el mapa solo una vez\r\n      mapInstance.current = L.map(mapRef.current);\r\n\r\n      // Añadimos la capa de OpenStreetMap\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(mapInstance.current);\r\n\r\n      // Calculamos el centro del mapa basándonos en los puntos GPS\r\n      const latitudes = gpsPoints.map(point => point.latitude);\r\n      const longitudes = gpsPoints.map(point => point.longitude);\r\n\r\n      // Calculamos el centro medio de todos los puntos GPS\r\n      const centerLat = (Math.min(...latitudes) + Math.max(...latitudes)) / 2;\r\n      const centerLng = (Math.min(...longitudes) + Math.max(...longitudes)) / 2;\r\n\r\n      // Centramos el mapa en el promedio de las coordenadas\r\n      mapInstance.current.setView([centerLat, centerLng], 3); // Zoom inicial 3\r\n\r\n      // Añadimos los marcadores de los puntos GPS\r\n      gpsPoints.forEach((point) => {\r\n        L.marker([point.latitude, point.longitude])\r\n          .addTo(mapInstance.current)\r\n          .bindPopup(`<b>ID:</b> ${point.id}`);\r\n      });\r\n\r\n      // Ajuste de tamaño al cambiar el tamaño de la ventana\r\n      mapInstance.current.invalidateSize();\r\n    }\r\n\r\n    // Limpiar la instancia del mapa al desmontar el componente\r\n    return () => {\r\n      if (mapInstance.current) {\r\n        mapInstance.current.remove();\r\n        mapInstance.current = null;\r\n      }\r\n    };\r\n  }, [gpsPoints]); // Solo cuando gpsPoints cambia\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      {error && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '20px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            padding: '10px',\r\n            backgroundColor: '#f44336',\r\n            color: 'white',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div\r\n        ref={mapRef}\r\n        style={{\r\n          width: '100%',  // El mapa ocupará todo el contenedor\r\n          height: '100%', // El mapa ocupará el 100% de la altura disponible\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}