{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\nimport L from 'leaflet';\nimport './Map.css'; // Asegúrate de importar el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [gpsPoints, setGpsPoints] = useState([]);\n  const [error, setError] = useState('');\n  const mapRef = useRef(null); // Usamos ref para asegurar que el contenedor del mapa esté disponible\n\n  // Cargar los puntos GPS\n  useEffect(() => {\n    const fetchGpsPoints = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/gps');\n        const data = await response.json();\n        setGpsPoints(data);\n      } catch (err) {\n        setError('Hubo un error al cargar los puntos GPS. Intenta nuevamente.');\n      }\n    };\n    fetchGpsPoints();\n  }, []);\n\n  // Inicializar el mapa cuando el contenedor esté listo\n  useLayoutEffect(() => {\n    if (gpsPoints.length > 0 && mapRef.current && !mapRef.current._leaflet_id) {\n      const map = L.map(mapRef.current).setView([51.505, -0.09], 13);\n\n      // Cargar los tiles de OpenStreetMap\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // Agregar los marcadores\n      gpsPoints.forEach(point => {\n        L.marker([point.latitude, point.longitude]).addTo(map).bindPopup(`<b>ID:</b> ${point.id}`);\n      });\n\n      // Ajustar el mapa cuando el tamaño cambie\n      map.invalidateSize(); // Redibuja el mapa si el tamaño cambia\n    }\n  }, [gpsPoints]); // Solo se ejecuta cuando los puntos GPS están disponibles\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        padding: '10px',\n        backgroundColor: '#f44336',\n        color: 'white',\n        borderRadius: '5px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef // Usamos ref para asegurar que el contenedor del mapa esté disponible\n      ,\n      style: {\n        width: 'calc(100% - 200px)',\n        // 100% del ancho menos 100px en ambos lados\n        height: '100vh',\n        margin: '0 100px' // Margin de 100px en ambos lados\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"uoiXxofGFn+HL7XF1QxIx0NDe7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLayoutEffect","L","jsxDEV","_jsxDEV","Map","_s","gpsPoints","setGpsPoints","error","setError","mapRef","fetchGpsPoints","response","fetch","data","json","err","length","current","_leaflet_id","map","setView","tileLayer","attribution","addTo","forEach","point","marker","latitude","longitude","bindPopup","id","invalidateSize","className","children","style","position","top","left","transform","padding","backgroundColor","color","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","margin","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/Map.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport L from 'leaflet';\r\nimport './Map.css'; // Asegúrate de importar el archivo CSS\r\n\r\nconst Map = () => {\r\n  const [gpsPoints, setGpsPoints] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const mapRef = useRef(null); // Usamos ref para asegurar que el contenedor del mapa esté disponible\r\n\r\n  // Cargar los puntos GPS\r\n  useEffect(() => {\r\n    const fetchGpsPoints = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/gps');\r\n        const data = await response.json();\r\n        setGpsPoints(data);\r\n      } catch (err) {\r\n        setError('Hubo un error al cargar los puntos GPS. Intenta nuevamente.');\r\n      }\r\n    };\r\n\r\n    fetchGpsPoints();\r\n  }, []);\r\n\r\n  // Inicializar el mapa cuando el contenedor esté listo\r\n  useLayoutEffect(() => {\r\n    if (gpsPoints.length > 0 && mapRef.current && !mapRef.current._leaflet_id) {\r\n      const map = L.map(mapRef.current).setView([51.505, -0.09], 13);\r\n\r\n      // Cargar los tiles de OpenStreetMap\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(map);\r\n\r\n      // Agregar los marcadores\r\n      gpsPoints.forEach((point) => {\r\n        L.marker([point.latitude, point.longitude]).addTo(map).bindPopup(`<b>ID:</b> ${point.id}`);\r\n      });\r\n\r\n      // Ajustar el mapa cuando el tamaño cambie\r\n      map.invalidateSize(); // Redibuja el mapa si el tamaño cambia\r\n    }\r\n  }, [gpsPoints]); // Solo se ejecuta cuando los puntos GPS están disponibles\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      {error && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '20px',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            padding: '10px',\r\n            backgroundColor: '#f44336',\r\n            color: 'white',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          {error}\r\n        </div>\r\n      )}\r\n      <div\r\n        ref={mapRef} // Usamos ref para asegurar que el contenedor del mapa esté disponible\r\n        style={{\r\n          width: 'calc(100% - 200px)', // 100% del ancho menos 100px en ambos lados\r\n          height: '100vh',\r\n          margin: '0 100px', // Margin de 100px en ambos lados\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}