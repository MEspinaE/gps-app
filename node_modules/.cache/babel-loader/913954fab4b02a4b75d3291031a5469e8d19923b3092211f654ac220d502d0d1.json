{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport axios from 'axios';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A'; // Asegúrate de que este sea tu API Key de Google\n\nconst Map = () => {\n  _s();\n  const [gpsPoints, setGpsPoints] = useState([]);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Obtener puntos GPS desde el servidor\n    axios.get('http://localhost:5000/api/gps').then(response => {\n      setGpsPoints(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error al obtener los puntos GPS:\", error);\n      setError('Error al cargar los puntos GPS.');\n      setLoading(false);\n    });\n\n    // Obtener la ubicación del dispositivo con la API de Geolocalización del navegador\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Latitud:\", position.coords.latitude);\n        console.log(\"Longitud:\", position.coords.longitude);\n        setCurrentLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error al obtener la ubicación:\", error);\n        setError(\"No se pudo obtener la ubicación del dispositivo.\");\n      });\n    } else {\n      setError(\"La geolocalización no es compatible con este navegador.\");\n    }\n\n    // Función para obtener la ubicación desde la API de Google\n    const fetchLocationFromGoogle = () => {\n      axios.get(`https://www.googleapis.com/geolocation/v1/geolocate?key=${API_KEY}`).then(response => {\n        const {\n          lat,\n          lng\n        } = response.data.location;\n        const sent_at = new Date().toISOString();\n        const phone_identifier = \"telefono-123\"; // Cambia esto según sea necesario\n\n        setCurrentLocation({\n          latitude: lat,\n          longitude: lng\n        });\n\n        // Guardar punto GPS en el servidor\n        axios.post('http://localhost:5000/api/gps', {\n          latitude: lat,\n          longitude: lng,\n          sent_at,\n          phone_identifier\n        }).then(() => {\n          console.log('Punto GPS guardado');\n        }).catch(error => {\n          console.error(\"Error al guardar el punto GPS:\", error);\n        });\n      }).catch(error => {\n        console.error(\"Error al obtener la ubicación de Google:\", error);\n        setError('No se pudo obtener la ubicación de Google.');\n      });\n    };\n\n    // Llamada a la función para obtener la ubicación desde Google cada 5 segundos\n    const intervalId = setInterval(fetchLocationFromGoogle, 5000);\n    return () => clearInterval(intervalId); // Limpiar el intervalo al desmontar el componente\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando el mapa...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: API_KEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: currentLocation ? {\n          lat: currentLocation.latitude,\n          lng: currentLocation.longitude\n        } : {\n          lat: -34.6037,\n          lng: -58.3816\n        } // Coordenadas por defecto (Buenos Aires)\n        ,\n        zoom: 13,\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%'\n        },\n        children: [gpsPoints.map(point => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: point.latitude,\n            lng: point.longitude\n          },\n          children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tel\\xE9fono:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), \" \", point.phone_identifier, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Hora de env\\xEDo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), \" \", new Date(point.sent_at).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, point.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: currentLocation.latitude,\n            lng: currentLocation.longitude\n          },\n          children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Tu ubicaci\\xF3n actual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"ukp1dmz3GjvosilTw+7cqxYuGpk=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","API_KEY","Map","_s","gpsPoints","setGpsPoints","currentLocation","setCurrentLocation","loading","setLoading","error","setError","get","then","response","data","catch","console","navigator","geolocation","getCurrentPosition","position","log","coords","latitude","longitude","fetchLocationFromGoogle","lat","lng","location","sent_at","Date","toISOString","phone_identifier","post","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","googleMapsApiKey","center","zoom","mapContainerStyle","map","point","toLocaleString","id","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\nimport './Map.css';\r\n\r\nconst API_KEY = 'AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A';  // Asegúrate de que este sea tu API Key de Google\r\n\r\nconst Map = () => {\r\n  const [gpsPoints, setGpsPoints] = useState([]);\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [loading, setLoading] = useState(true); \r\n  const [error, setError] = useState(null); \r\n\r\n  useEffect(() => {\r\n    // Obtener puntos GPS desde el servidor\r\n    axios.get('http://localhost:5000/api/gps')\r\n      .then(response => {\r\n        setGpsPoints(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error al obtener los puntos GPS:\", error);\r\n        setError('Error al cargar los puntos GPS.');\r\n        setLoading(false);\r\n      });\r\n\r\n    // Obtener la ubicación del dispositivo con la API de Geolocalización del navegador\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          console.log(\"Latitud:\", position.coords.latitude);\r\n          console.log(\"Longitud:\", position.coords.longitude);\r\n          setCurrentLocation({\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al obtener la ubicación:\", error);\r\n          setError(\"No se pudo obtener la ubicación del dispositivo.\");\r\n        }\r\n      );\r\n    } else {\r\n      setError(\"La geolocalización no es compatible con este navegador.\");\r\n    }\r\n\r\n    // Función para obtener la ubicación desde la API de Google\r\n    const fetchLocationFromGoogle = () => {\r\n      axios.get(`https://www.googleapis.com/geolocation/v1/geolocate?key=${API_KEY}`)\r\n        .then(response => {\r\n          const { lat, lng } = response.data.location;\r\n          const sent_at = new Date().toISOString();\r\n          const phone_identifier = \"telefono-123\";  // Cambia esto según sea necesario\r\n\r\n          setCurrentLocation({ latitude: lat, longitude: lng });\r\n\r\n          // Guardar punto GPS en el servidor\r\n          axios.post('http://localhost:5000/api/gps', {\r\n            latitude: lat,\r\n            longitude: lng,\r\n            sent_at,\r\n            phone_identifier\r\n          })\r\n          .then(() => {\r\n            console.log('Punto GPS guardado');\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error al guardar el punto GPS:\", error);\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error al obtener la ubicación de Google:\", error);\r\n          setError('No se pudo obtener la ubicación de Google.');\r\n        });\r\n    };\r\n\r\n    // Llamada a la función para obtener la ubicación desde Google cada 5 segundos\r\n    const intervalId = setInterval(fetchLocationFromGoogle, 5000);\r\n\r\n    return () => clearInterval(intervalId); // Limpiar el intervalo al desmontar el componente\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Cargando el mapa...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map-container\" style={{ width: '100%', height: '100vh' }}>\r\n      <LoadScript googleMapsApiKey={API_KEY}>\r\n        <GoogleMap\r\n          center={currentLocation ? { lat: currentLocation.latitude, lng: currentLocation.longitude } : { lat: -34.6037, lng: -58.3816 }} // Coordenadas por defecto (Buenos Aires)\r\n          zoom={13}\r\n          mapContainerStyle={{ width: '100%', height: '100%' }}\r\n        >\r\n          {gpsPoints.map((point) => (\r\n            <Marker\r\n              key={point.id}\r\n              position={{ lat: point.latitude, lng: point.longitude }}\r\n            >\r\n              <InfoWindow>\r\n                <div>\r\n                  <strong>Teléfono:</strong> {point.phone_identifier} <br />\r\n                  <strong>Hora de envío:</strong> {new Date(point.sent_at).toLocaleString()}\r\n                </div>\r\n              </InfoWindow>\r\n            </Marker>\r\n          ))}\r\n\r\n          {currentLocation && (\r\n            <Marker position={{ lat: currentLocation.latitude, lng: currentLocation.longitude }}>\r\n              <InfoWindow>\r\n                <div>Tu ubicación actual</div>\r\n              </InfoWindow>\r\n            </Marker>\r\n          )}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}