{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: -33.8688,\n  // Coordenada predeterminada (por ejemplo, Sydney)\n  lng: 151.2093 // Coordenada predeterminada\n};\nconst Map = () => {\n  _s();\n  const [userLocations, setUserLocations] = useState([]); // Array para almacenar todas las ubicaciones\n  const [mapLoaded, setMapLoaded] = useState(false);\n\n  // Función para obtener la ubicación del usuario\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocations(prevLocations => [...prevLocations, newLocation]); // Añadir nueva ubicación al array\n      }, error => {\n        console.error(\"Error obteniendo la ubicación: \", error);\n      });\n    }\n  };\n  useEffect(() => {\n    // Detectamos si el dispositivo es móvil\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\n\n    // Si es un dispositivo móvil, obtenemos la geolocalización\n    if (isMobile) {\n      // Obtener la ubicación inicial\n      getUserLocation();\n\n      // Actualizar la ubicación cada 5 segundos\n      const intervalId = setInterval(() => {\n        getUserLocation();\n      }, 5000); // 5000ms = 5 segundos\n\n      // Limpiar el intervalo cuando el componente se desmonte\n      return () => clearInterval(intervalId);\n    } else {\n      console.log(\"No es un dispositivo móvil o geolocalización no soportada\");\n    }\n  }, []);\n  const handleMapLoad = () => {\n    setMapLoaded(true);\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: containerStyle,\n      center: userLocations.length > 0 ? userLocations[userLocations.length - 1] : center // Centra el mapa en la última ubicación\n      ,\n      zoom: 15,\n      onLoad: handleMapLoad,\n      children: userLocations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location,\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: location,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Ubicaci\\xF3n actual #\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Latitud: \", location.lat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Longitud: \", location.lng]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"0HrIoJhVPPwpqkRQD6JaJKDMeH0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Map","_s","userLocations","setUserLocations","mapLoaded","setMapLoaded","getUserLocation","navigator","geolocation","getCurrentPosition","position","newLocation","coords","latitude","longitude","prevLocations","error","console","isMobile","test","userAgent","intervalId","setInterval","clearInterval","log","handleMapLoad","googleMapsApiKey","children","id","mapContainerStyle","length","zoom","onLoad","map","location","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px',\r\n};\r\n\r\nconst center = {\r\n  lat: -33.8688, // Coordenada predeterminada (por ejemplo, Sydney)\r\n  lng: 151.2093, // Coordenada predeterminada\r\n};\r\n\r\nconst Map = () => {\r\n  const [userLocations, setUserLocations] = useState([]); // Array para almacenar todas las ubicaciones\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n\r\n  // Función para obtener la ubicación del usuario\r\n  const getUserLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const newLocation = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          setUserLocations((prevLocations) => [...prevLocations, newLocation]); // Añadir nueva ubicación al array\r\n        },\r\n        (error) => {\r\n          console.error(\"Error obteniendo la ubicación: \", error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Detectamos si el dispositivo es móvil\r\n    const isMobile = /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n    \r\n    // Si es un dispositivo móvil, obtenemos la geolocalización\r\n    if (isMobile) {\r\n      // Obtener la ubicación inicial\r\n      getUserLocation();\r\n\r\n      // Actualizar la ubicación cada 5 segundos\r\n      const intervalId = setInterval(() => {\r\n        getUserLocation();\r\n      }, 5000); // 5000ms = 5 segundos\r\n\r\n      // Limpiar el intervalo cuando el componente se desmonte\r\n      return () => clearInterval(intervalId);\r\n    } else {\r\n      console.log(\"No es un dispositivo móvil o geolocalización no soportada\");\r\n    }\r\n  }, []);\r\n\r\n  const handleMapLoad = () => {\r\n    setMapLoaded(true);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyAroIurW0UnnyU7b_n7RQtkxAb3Asmmb2A\">\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={containerStyle}\r\n        center={userLocations.length > 0 ? userLocations[userLocations.length - 1] : center} // Centra el mapa en la última ubicación\r\n        zoom={15}\r\n        onLoad={handleMapLoad}\r\n      >\r\n        {userLocations.map((location, index) => (\r\n          <Marker key={index} position={location}>\r\n            <InfoWindow position={location}>\r\n              <div>\r\n                <h2>Ubicación actual #{index + 1}</h2>\r\n                <p>Latitud: {location.lat}</p>\r\n                <p>Longitud: {location.lng}</p>\r\n              </div>\r\n            </InfoWindow>\r\n          </Marker>\r\n        ))}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}