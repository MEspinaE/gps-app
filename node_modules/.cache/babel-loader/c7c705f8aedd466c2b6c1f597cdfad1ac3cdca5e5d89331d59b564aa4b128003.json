{"ast":null,"code":"var _jsxFileName = \"F:\\\\Progra\\\\gps-app\\\\frontend\\\\src\\\\SendGps.js\",\n  _s = $RefreshSig$();\n// src/SendGps.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './SendGps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendGps = () => {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [phoneId, setPhoneId] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!latitude || !longitude || !phoneId) {\n      setError('Por favor, complete todos los campos.');\n      return;\n    }\n    if (isNaN(latitude) || isNaN(longitude)) {\n      setError('Las coordenadas deben ser números válidos.');\n      return;\n    }\n    setError('');\n    setSuccess('');\n    const data = {\n      latitude: parseFloat(latitude),\n      longitude: parseFloat(longitude),\n      sent_at: new Date().toISOString(),\n      phone_identifier: phoneId\n    };\n    console.log('Sending data:', data); // Verificar los datos antes de enviarlos\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/gps', data);\n      console.log('Response from server:', response.data); // Verificar la respuesta del servidor\n      setSuccess('Punto GPS enviado exitosamente');\n      setLatitude('');\n      setLongitude('');\n      setPhoneId('');\n    } catch (error) {\n      console.error('Error sending GPS data:', error); // Verificar cualquier error al enviar\n      setError('Hubo un error al enviar la ubicación. Intenta nuevamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phone ID\",\n        value: phoneId,\n        onChange: e => setPhoneId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Latitude\",\n        value: latitude,\n        onChange: e => setLatitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Longitude\",\n        value: longitude,\n        onChange: e => setLongitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar Ubicaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SendGps, \"XTxqWxG8YlgIo0cxwB7T/poQVVM=\");\n_c = SendGps;\nexport default SendGps;\nvar _c;\n$RefreshReg$(_c, \"SendGps\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SendGps","_s","latitude","setLatitude","longitude","setLongitude","phoneId","setPhoneId","error","setError","success","setSuccess","handleSubmit","e","preventDefault","isNaN","data","parseFloat","sent_at","Date","toISOString","phone_identifier","console","log","response","post","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["F:/Progra/gps-app/frontend/src/SendGps.js"],"sourcesContent":["// src/SendGps.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './SendGps.css';\r\n\r\nconst SendGps = () => {\r\n  const [latitude, setLatitude] = useState('');\r\n  const [longitude, setLongitude] = useState('');\r\n  const [phoneId, setPhoneId] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!latitude || !longitude || !phoneId) {\r\n      setError('Por favor, complete todos los campos.');\r\n      return;\r\n    }\r\n\r\n    if (isNaN(latitude) || isNaN(longitude)) {\r\n      setError('Las coordenadas deben ser números válidos.');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    const data = {\r\n      latitude: parseFloat(latitude),\r\n      longitude: parseFloat(longitude),\r\n      sent_at: new Date().toISOString(),\r\n      phone_identifier: phoneId,\r\n    };\r\n\r\n    console.log('Sending data:', data); // Verificar los datos antes de enviarlos\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/gps', data);\r\n      console.log('Response from server:', response.data); // Verificar la respuesta del servidor\r\n      setSuccess('Punto GPS enviado exitosamente');\r\n      setLatitude('');\r\n      setLongitude('');\r\n      setPhoneId('');\r\n    } catch (error) {\r\n      console.error('Error sending GPS data:', error); // Verificar cualquier error al enviar\r\n      setError('Hubo un error al enviar la ubicación. Intenta nuevamente.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone ID\"\r\n          value={phoneId}\r\n          onChange={(e) => setPhoneId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Latitude\"\r\n          value={latitude}\r\n          onChange={(e) => setLatitude(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Longitude\"\r\n          value={longitude}\r\n          onChange={(e) => setLongitude(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Enviar Ubicación</button>\r\n      </form>\r\n\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      {success && <div style={{ color: 'green' }}>{success}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendGps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}